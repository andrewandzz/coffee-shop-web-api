// <auto-generated />
using System;
using CoffeeShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeShop.Data.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20210218235136_AllowCustomerNamePropertyBeNull")]
    partial class AllowCustomerNamePropertyBeNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeShop.Data.Entities.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Volume")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageFileName = "espresso.webp",
                            Name = "Espresso",
                            Price = 8.0,
                            Volume = "133 ml"
                        },
                        new
                        {
                            Id = 2,
                            ImageFileName = "americano.webp",
                            Name = "Americano",
                            Price = 12.0,
                            Volume = "250 ml"
                        },
                        new
                        {
                            Id = 3,
                            ImageFileName = "americano.webp",
                            Name = "Americano",
                            Price = 15.0,
                            Volume = "380 ml"
                        },
                        new
                        {
                            Id = 4,
                            ImageFileName = "americano-with-milk.webp",
                            Name = "Americano with milk",
                            Price = 14.0,
                            Volume = "250 ml"
                        },
                        new
                        {
                            Id = 5,
                            ImageFileName = "americano-with-milk.webp",
                            Name = "Americano with milk",
                            Price = 17.0,
                            Volume = "380 ml"
                        },
                        new
                        {
                            Id = 6,
                            ImageFileName = "cappuccino.webp",
                            Name = "Cappuccino",
                            Price = 15.0,
                            Volume = "250 ml"
                        },
                        new
                        {
                            Id = 7,
                            ImageFileName = "cappuccino.webp",
                            Name = "Cappuccino",
                            Price = 18.0,
                            Volume = "380 ml"
                        },
                        new
                        {
                            Id = 8,
                            ImageFileName = "latte.webp",
                            Name = "Latte",
                            Price = 15.0,
                            Volume = "250 ml"
                        },
                        new
                        {
                            Id = 9,
                            ImageFileName = "latte.webp",
                            Name = "Latte",
                            Price = 18.0,
                            Volume = "380 ml"
                        });
                });

            modelBuilder.Entity("CoffeeShop.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoffeeShop.Data.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoffeeId")
                        .HasColumnType("int");

                    b.Property<bool>("CupCap")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("CoffeeShop.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("CoffeeShop.Data.Entities.Coffee", "Coffee")
                        .WithMany("OrderItems")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeShop.Data.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CoffeeShop.Data.Entities.Coffee", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("CoffeeShop.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
